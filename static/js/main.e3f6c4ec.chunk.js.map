{"version":3,"sources":["components/Bar.js","components/Number.js","components/Form.js","components/LearnAbout.js","algorithms/helpers.js","algorithms/bubbleSort.js","algorithms/mergeSort.js","algorithms/quickSort.js","App.js","components/Footer.js","index.js"],"names":["Bar","style","height","length","backgroundColor","colorKey","className","Number","color","margin","textAlign","fontSize","fontWeight","minWidth","padding","Form","formLabel","values","labels","currentValue","onChange","FormControl","FormLabel","RadioGroup","value","map","index","FormControlLabel","key","control","Radio","label","swap","array","indexA","indexB","temp","insertStep","arrayNew","position","arraySteps","currentStep","slice","splice","push","bubbleSort","colorSteps","i","j","Array","fill","merge","arrayA","arrayB","shift","updateColor","concat","start","end","mergeSort","mid","Math","floor","quickSort","A","B","C","middleValue","sort","indexOf","pickPivot","pivot","bigIndex","max","App","state","num","timeouts","algorithm","barCount","delay","ALGO_SET","generateSteps","steps","setState","stepBack","clearTimeouts","stepForward","changeAlgorithm","event","target","clearColorKey","changeBarCount","currnum","generateBars","changeDelay","parseInt","forEach","timeout","clearTimeout","blankKey","console","log","barsTemp","random","this","setTimeout","playButton","barsDiv","IconButton","onClick","Pause","RotateLeft","setTimeouts","PlayArrow","btn","Button","href","SkipPrevious","SkipNext","e","React","Component","Footer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e3f6c4ec.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./Bar.css\"\r\n\r\nfunction Bar({ length, colorKey }) {\r\n  const COLOR_SET = [\"grey\", \"orange\", \"green\"];\r\n\r\n  let color = COLOR_SET[colorKey];\r\n\r\n  let style = {\r\n    height: length,\r\n    backgroundColor: color,\r\n  }\r\n\r\n  return (\r\n    <div className=\"bar\" style={style} ></div>\r\n  )\r\n}\r\n\r\nexport default Bar;","import React from 'react'\r\n\r\nfunction Number({ length, colorKey}) {\r\n    const COLOR_SET = [\"grey\", \"orange\", \"green\"];\r\n    let color = COLOR_SET[colorKey];\r\n    return (<>\r\n        <div style={{\r\n            color: \"white\",\r\n            margin: \"10px\",\r\n            textAlign: \"center\",\r\n            fontSize: \"1.7rem\",\r\n            fontWeight: \"bold\",\r\n            backgroundColor: color,\r\n            height: \"40px\",\r\n            minWidth: \"40px\",\r\n            padding: \"0 8px\"\r\n        }\r\n        }>  {length} </div>\r\n    </>);\r\n}\r\n\r\nexport default Number;\r\n","import React from 'react';\r\nimport { FormControl, FormControlLabel, FormLabel, Radio, RadioGroup } from '@material-ui/core';\r\n\r\nexport default function Form({ formLabel, values, labels, currentValue, onChange }) {\r\n  return (\r\n    <div className=\"card container-small\">\r\n      <FormControl>\r\n        <FormLabel>{formLabel}</FormLabel>\r\n        <RadioGroup value={currentValue} onChange={onChange}>\r\n          {values.map((value, index) => {\r\n            return (<FormControlLabel\r\n              key={`${value}_${index}`}\r\n              value={values[index]}\r\n              control={<Radio />}\r\n              label={labels[index]} />);\r\n          })}\r\n        </RadioGroup>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}","import React from 'react'\r\n\r\nconst LearnAbout = ({algorithm}) => {\r\n    return (\r\n        <div>\r\n            <a href=\"https://www.geeksforgeeks.org/bubble-sort/\"></a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LearnAbout\r\n","\r\nexport function swap(array, indexA, indexB) {\r\n  let temp = array[indexA];\r\n  array[indexA] = array[indexB];\r\n  array[indexB] = temp;\r\n  return array;\r\n}\r\n\r\nexport function insertStep(arrayNew, position, arraySteps) {\r\n  let currentStep = arraySteps[arraySteps.length - 1].slice();\r\n  currentStep.splice(position, arrayNew.length, ...arrayNew);\r\n  arraySteps.push(currentStep);\r\n}","import { swap } from './helpers';\r\n\r\nconst bubbleSort = (array, position, arraySteps, colorSteps) => {\r\n  let colorKey = colorSteps[colorSteps.length - 1].slice();\r\n\r\n  for (let i = 0; i < array.length - 1; i++) {\r\n    for (let j = 0; j < array.length - i - 1; j++) {\r\n      if (array[j] > array[j + 1]) {\r\n        array = swap(array, j, j + 1);\r\n      }\r\n      arraySteps.push(array.slice());\r\n      colorKey[j] = 1;\r\n      colorKey[j + 1] = 1;\r\n      colorSteps.push(colorKey.slice());\r\n      colorKey[j] = 0;\r\n      colorKey[j + 1] = 0;\r\n    }\r\n    colorKey[array.length - 1 - i] = 2;\r\n    arraySteps.push(array.slice());\r\n    colorSteps.push(colorKey.slice());\r\n  }\r\n  // Remaining bars become green\r\n  colorSteps[colorSteps.length - 1] = new Array(array.length).fill(2);\r\n  return;\r\n}\r\n\r\nexport default bubbleSort;","import { insertStep } from './helpers';\r\n\r\nfunction mergeSort(array, position, arraySteps, colorSteps) {\r\n  if (array.length === 1) return array;\r\n  let mid = Math.floor(array.length / 2);\r\n\r\n  // Split and work recursively\r\n  let arrayA = mergeSort(array.slice(0, mid), position, arraySteps, colorSteps);\r\n  let arrayB = mergeSort(array.slice(mid), position + mid, arraySteps, colorSteps);\r\n\r\n  let arrayNew = merge(arrayA, arrayB, position, arraySteps, colorSteps);\r\n  arraySteps.push(arraySteps[arraySteps.length - 1].slice());\r\n  colorSteps.push(colorSteps[colorSteps.length - 1].fill(arrayNew.length === arraySteps[0].length ? 2 : 0));\r\n  return arrayNew;\r\n}\r\n\r\nconst merge = (arrayA, arrayB, position, arraySteps, colorSteps) => {\r\n  let arrayNew = [];\r\n  let A = 0;\r\n  let B = 0;\r\n\r\n  while (arrayA.length > 0 && arrayB.length > 0) {\r\n    if (arrayA[A] < arrayB[B]) {\r\n      arrayNew.push(arrayA.shift());\r\n      insertStep(arrayNew, position, arraySteps);\r\n    } else {\r\n      arrayNew.push(arrayB.shift());\r\n      insertStep(arrayNew, position, arraySteps);\r\n    }\r\n    updateColor(position, colorSteps, arrayNew.length - 1, [], []);\r\n  }\r\n\r\n  // concatenate remaining values\r\n\r\n  if (arrayA.length !== 0 || arrayB.length !== 0) {\r\n    updateColor(position, colorSteps, arrayNew.length, arrayA, arrayB);\r\n    arrayNew = arrayNew.concat(arrayA);\r\n    arrayNew = arrayNew.concat(arrayB)\r\n    insertStep(arrayNew, position, arraySteps);\r\n  }\r\n\r\n  return arrayNew;\r\n}\r\n\r\nfunction updateColor(position, colorSteps, start, arrayA, arrayB) {\r\n  let colorKey = colorSteps[colorSteps.length - 1].slice();\r\n  let end = position + start + arrayA.length + arrayB.length;\r\n  start = start + position;\r\n\r\n  if (end === start) {\r\n    colorKey.fill(1, start, end + 1);\r\n  } else {\r\n    colorKey.fill(1, start, end);\r\n  }\r\n  colorSteps.push(colorKey);\r\n}\r\n\r\nexport default mergeSort;","import { swap, insertStep } from './helpers';\r\n\r\nconst quickSort = (array, position, arraySteps, colorSteps) => {\r\n  if (array.length < 2) {\r\n    insertStep(array, position, arraySteps);\r\n\r\n    let colorKey = colorSteps[colorSteps.length - 1].slice();\r\n    colorKey[position] = 2;\r\n    colorSteps.push(colorKey);\r\n    return;\r\n  }\r\n\r\n  // pick median of three numbers as pivot and sent it to back\r\n  swap(array, pickPivot(array), array.length - 1);\r\n  insertStep(array, position, arraySteps);\r\n  colorSteps.push(colorSteps[colorSteps.length - 1].slice());\r\n\r\n  let pivot = array[array.length - 1];\r\n  let A = 0;\r\n  let B = array.length - 1;\r\n\r\n  // swap small value from right with big value from left\r\n  while (A < B) {\r\n    while (array[A] < pivot) {\r\n      insertStep(array, position, arraySteps);\r\n      let colorKey = colorSteps[colorSteps.length - 1].slice();\r\n      colorKey = colorKey.map(key => key === 2 ? 2 : 0);\r\n      colorKey[position + A] = 1;\r\n      colorKey[position + B] = 1;\r\n      colorSteps.push(colorKey);\r\n      A++;\r\n    }\r\n    while (array[B] >= pivot) {\r\n      insertStep(array, position, arraySteps);\r\n      let colorKey = colorSteps[colorSteps.length - 1].slice();\r\n      colorKey = colorKey.map(key => key === 2 ? 2 : 0);\r\n      colorKey[position + A] = 1;\r\n      colorKey[position + B] = 1;\r\n      colorSteps.push(colorKey);\r\n      B--;\r\n    }\r\n    if (A < B) {\r\n      swap(array, A, B);\r\n      insertStep(array, position, arraySteps);\r\n      let colorKey = colorSteps[colorSteps.length - 1].slice();\r\n      colorKey = colorKey.map(key => key === 2 ? 2 : 0);\r\n      colorKey[position + A] = 1;\r\n      colorKey[position + B] = 1;\r\n      colorSteps.push(colorKey);\r\n    }\r\n  }\r\n\r\n  // swap big value with pivot\r\n  let bigIndex = Math.max(A, B);\r\n\r\n  swap(array, bigIndex, array.length - 1);\r\n  insertStep(array, position, arraySteps);\r\n  let colorKey = colorSteps[colorSteps.length - 1].slice();\r\n  colorKey[position + bigIndex] = 2;\r\n  colorSteps.push(colorKey);\r\n\r\n  // recurse on two halves\r\n  quickSort(array.slice(0, A), position, arraySteps, colorSteps);\r\n  quickSort(array.slice(A + 1), position + A + 1, arraySteps, colorSteps);\r\n\r\n  return;\r\n}\r\n\r\nfunction pickPivot(array) {\r\n  let A = array[0];\r\n  let B = array[Math.floor(array.length / 2)];\r\n  let C = array[array.length - 1];\r\n\r\n  let middleValue = [A, B, C].sort()[1];\r\n  let middleIndex = array.indexOf(middleValue);\r\n\r\n  return middleIndex;\r\n}\r\n\r\nexport default quickSort;","import React from 'react';\r\nimport { Button, IconButton } from '@material-ui/core';\r\nimport { PlayArrow, Pause, SkipPrevious, SkipNext, RotateLeft } from '@material-ui/icons';\r\nimport Bar from './components/Bar';\r\nimport Number from './components/Number';\r\nimport Form from './components/Form';\r\nimport LearnAbout from './components/LearnAbout';\r\n\r\n// style\r\nimport './App.css';\r\n\r\n// algorithms\r\nimport bubbleSort from './algorithms/bubbleSort';\r\nimport mergeSort from './algorithms/mergeSort';\r\nimport quickSort from './algorithms/quickSort';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    array: [],\r\n    colorKey: [],\r\n    arraySteps: [],\r\n    colorSteps: [],\r\n    currentStep: 0,\r\n    num: 0,\r\n    timeouts: [],\r\n    algorithm: 'Bubble Sort',\r\n    barCount: 10,\r\n    delay: 800,\r\n  }\r\n\r\n  ALGO_SET = {\r\n    'Bubble Sort': bubbleSort,\r\n    'Merge Sort': mergeSort,\r\n    'Quick Sort': quickSort,\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.generateBars();\r\n  }\r\n\r\n  generateSteps = () => {\r\n    let array = this.state.array.slice();\r\n    let steps = this.state.arraySteps.slice();\r\n    let colorSteps = this.state.colorSteps.slice();\r\n\r\n    //print something\r\n    // console.log(\"generate steps\");\r\n\r\n    this.ALGO_SET[this.state.algorithm](array, 0, steps, colorSteps);\r\n\r\n\r\n    this.setState({\r\n      arraySteps: steps,\r\n      colorSteps: colorSteps,\r\n    });\r\n  }\r\n\r\n  setTimeouts() {\r\n    let steps = this.state.arraySteps;\r\n    let colorSteps = this.state.colorSteps;\r\n\r\n    //print something\r\n    // console.log(\"settimeouts\");\r\n\r\n    this.clearTimeouts();\r\n    let timeouts = [];\r\n    let i = 0;\r\n\r\n    while (i < steps.length - this.state.currentStep) {\r\n      let timeout = setTimeout(() => {\r\n        let currentStep = this.state.currentStep;\r\n        this.setState({\r\n          array: steps[currentStep],\r\n          colorKey: colorSteps[currentStep],\r\n          currentStep: currentStep + 1,\r\n        });\r\n      }, this.state.delay * (i));\r\n      timeouts.push(timeout);\r\n      i++;\r\n    }\r\n\r\n    this.setState({\r\n      timeouts: timeouts,\r\n    });\r\n  }\r\n\r\n  stepBack = () => {\r\n    if (this.state.currentStep === 0) return;\r\n    this.clearTimeouts();\r\n\r\n    let currentStep = this.state.currentStep - 1;\r\n    this.setState({\r\n      array: this.state.arraySteps[currentStep],\r\n      colorKey: this.state.colorSteps[currentStep],\r\n      currentStep: currentStep,\r\n    });\r\n  }\r\n\r\n  stepForward = () => {\r\n    if (this.state.currentStep >= this.state.arraySteps.length - 1) return;\r\n    this.clearTimeouts();\r\n\r\n    let currentStep = this.state.currentStep + 1;\r\n    this.setState({\r\n      array: this.state.arraySteps[currentStep],\r\n      colorKey: this.state.colorSteps[currentStep],\r\n      currentStep: currentStep,\r\n    });\r\n  }\r\n\r\n  changeAlgorithm = (event) => {\r\n    this.setState({\r\n      algorithm: event.target.value,\r\n      currentStep: 0,\r\n      arraySteps: [this.state.arraySteps[this.state.currentStep === 0 ? 0 : this.state.currentStep - 1]],\r\n    }, () => this.generateSteps());\r\n    this.clearTimeouts();\r\n    this.clearColorKey();\r\n  };\r\n\r\n  changeBarCount = (barCount) => {\r\n    let currnum = this.state.num;\r\n    this.setState({\r\n      barCount: barCount,\r\n      num: (barCount == 50) ? 0 : currnum\r\n    }, () => this.generateBars());\r\n  }\r\n\r\n  changeDelay = (event) => {\r\n    this.clearTimeouts();\r\n    this.setState({\r\n      delay: parseInt(event.target.value),\r\n    });\r\n  };\r\n\r\n  clearTimeouts = () => {\r\n    this.state.timeouts.forEach(timeout => clearTimeout(timeout));\r\n    this.setState({\r\n      timeouts: [],\r\n    })\r\n  }\r\n\r\n  clearColorKey = () => {\r\n    let blankKey = new Array(parseInt(this.state.barCount)).fill(0);\r\n    this.setState({\r\n      colorKey: blankKey,\r\n      colorSteps: [blankKey],\r\n    });\r\n  }\r\n\r\n  generateBars = () => {\r\n    console.log(\"this\");\r\n    this.clearTimeouts();\r\n    this.clearColorKey();\r\n    //printing something\r\n    // console.log(\"generate bars\");\r\n\r\n    let barCount = parseInt(this.state.barCount);\r\n    let barsTemp = [];\r\n\r\n    for (let i = 0; i < barCount; i++) {\r\n      barsTemp.push(Math.floor(Math.random() * 90) + 10);\r\n    }\r\n\r\n    this.setState({\r\n      array: barsTemp,\r\n      arraySteps: [barsTemp],\r\n      barCount: barCount,\r\n      currentStep: 0,\r\n    }, () => this.generateSteps());\r\n  }\r\n\r\n  render() {\r\n    let barsDiv = this.state.array.map((value, index) => (this.state.num === 0) ? <Bar\r\n      key={index}\r\n      length={value}\r\n      colorKey={this.state.colorKey[index]}\r\n    /> : <Number key={index}\r\n      length={value}\r\n      colorKey={this.state.colorKey[index]} />\r\n    );\r\n    let playButton;\r\n\r\n    // Set player controls\r\n    if (this.state.timeouts.length !== 0 && this.state.currentStep !== this.state.arraySteps.length) {\r\n      playButton = (\r\n        <IconButton onClick={() => this.clearTimeouts()} >\r\n          <Pause />\r\n        </IconButton>\r\n      );\r\n    } else if (this.state.currentStep === this.state.arraySteps.length) {\r\n      playButton = (\r\n        <IconButton color=\"secondary\" onClick={() => this.generateBars()} >\r\n          <RotateLeft />\r\n        </IconButton>\r\n      )\r\n    } else {\r\n      playButton = (\r\n        <IconButton color=\"secondary\" onClick={() => this.setTimeouts()} >\r\n          <PlayArrow />\r\n        </IconButton>);\r\n    }\r\n\r\n    let btn = {\r\n      backgroundColor: \"grey\",\r\n      color: \"white\",\r\n      margin: \"10px\"\r\n    }\r\n    return (\r\n      <div className=\"App\">\r\n        <section className=\"bars container card\">\r\n          {barsDiv}\r\n        </section>\r\n        <section className=\"type\">\r\n          <Button style={btn} onClick={() => { this.setState({ num: (this.state.barCount === 50) ? 0 : 1 }) }}>Numbers</Button>\r\n          <Button style={btn} onClick={() => { this.setState({ num: 0 }) }}>Bars</Button>\r\n          <Button>\r\n          <a href=\"https://www.interviewbit.com/tutorial/sorting-algorithms/\" target=\"_blank\">Learn About {this.state.algorithm}</a>\r\n          </Button>\r\n\r\n          {/* {()=><LearnAbout algorithm={this.state.algorithm} */}\r\n        </section>\r\n\r\n        <section className=\"container-small\">\r\n          <IconButton onClick={() => this.generateBars()} >\r\n            <RotateLeft />\r\n          </IconButton>\r\n          <IconButton onClick={this.stepBack} >\r\n            <SkipPrevious />\r\n          </IconButton>\r\n          {playButton}\r\n          <IconButton onClick={this.stepForward} >\r\n            <SkipNext />\r\n          </IconButton>\r\n          <IconButton />\r\n        </section>\r\n\r\n        <section className=\"controls container-small\">\r\n          <Form\r\n            formLabel=\"Algorithm\"\r\n            values={['Bubble Sort', 'Merge Sort', 'Quick Sort']}\r\n            labels={['Bubble Sort', 'Merge Sort', 'Quick Sort']}\r\n            currentValue={this.state.algorithm}\r\n            onChange={this.changeAlgorithm}\r\n          />\r\n\r\n          <Form\r\n            formLabel=\"Array size\"\r\n            values={[10, 20, 50]}\r\n            labels={['10 items', '20 items', '50 items']}\r\n            currentValue={this.state.barCount}\r\n            onChange={e => this.changeBarCount(e.target.value)}\r\n          />\r\n\r\n          <Form\r\n            formLabel=\"Speed\"\r\n            values={[800, 400, 50]}\r\n            labels={['1x', '2x', '4x']}\r\n            currentValue={this.state.delay}\r\n            onChange={this.changeDelay}\r\n          />\r\n        </section>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\r\n\r\nfunction Footer() {\r\n    return (<>\r\n        <footer>\r\n            <h3>Made By - Prakash Dhayal</h3>\r\n            <h4>Software Engineering Project</h4>\r\n            <p>Contact Me: <a href=\"https://www.linkedin.com/in/prakash-dhayal-575074199/\" target=\"_blank\">LinkedIn</a></p>\r\n        </footer>\r\n    </>);\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport Footer from './components/Footer';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n    <Footer />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}